입력 메소드
	-문자열 입력
		next()
			공백 혹은 엔터(\n)를 구분점으로 삼고
			양 옆의 문자열 값을 분리하여 입력받는다.
		
			예) 한 동석
			첫번째 sc.next(): 한
			두번째 sc.next(): 동석

		nextLine()
			공백이나 엔터를 구분점으로 삼지않고 모두 가져온다.
			만약 사용하는 부분 위에서 엔터를 쳤다면, 
			그 엔터를 가져오기 때문에 정상적으로 입력이 되지 않는다.
			이럴 때에는 한 번 더 사용해준다.

	-정수 입력
		nextInt()

	-실수 입력
		nextDouble()


+++++

쌤 day3에서 받아와 두 정수받고 뺄셈


+++++


연산자
	기능이 있는 특수문자
	
연산자 우선순위

	(최단산쉬관리삼대)
	최우선 연산자
		()
	단항 연산자
		~,!,()형변환
	산술 연산자
		+,-,*,/,%,...
	쉬프트 연산자
		<<,>>(빈 칸이 부호에 맞게 채워진다), a>>>b (a를 b만큼 우측으로 이동)(빈 칸은 무조건 0으로 채워진다)
	관계 연산자
		<,>,<=,>=,==,!=
	논리 연산자
		&,|,^,&&,||
	삼항 연산자
		a?b:c
	대입 연산자
		=,+=,-=,*=,/=,%=,,,
	
결합성
	(★★★면접대비★★★)
	하나의 수식에 동일한 우선순위의 연산자가 여러개 있을 경우
	알맞는 방향으로 결합되어 연산되는 성질이다.

비트연산(0과1, 2진수) (디자인, 정보보안, 네트워크, 안드로이드, 빅데이터, 직력화, 역직렬화,,,)

	-논리 연산자
	& AND(논리곱) (주로 해킹할때) : 둘다 1일 때 1
	|(파이프연산자) OR(논리합)	: 둘 중 하나라도 1이면 1
	^ XOR(베타논리합)		: 두 비트가 서로 다르면 1

	1010 10(2)
	1011 11(2)

	(비교할때 뒤에서부터 0과1, 1과1, 0과0, 1과1)
	10&11 : 1010 10(2)
	10|11 : 1011 11(2)
	10^11 : 0001 1(2)	

	-단항 연산자
	~NOT(논리부정) : 0을 1로, 1을 0으로 변경
	(주고 보색 구할때 쓰임)

	(★★★면접대비★★★)
	왜 음수가 양수보다 하나 더 많나?
	-0때문입니다

	~10 : 1010 -> 0101 : 5(10)
	(공식) ~a = -a - 1


	-쉬프트 연산자	
		<<(좌쉬프트): a<<b, a를 b만큼 좌로 이동
		>>(우쉬프트): a>>b, a를 b만큼 우로 이동


+++++


조건식
	결과가 참 또는 거짓 둘 중 하나가 나오는 식	
	x > 10
	
	C언어에서는 거짓을 0으로, 참을 0이 아닌 수로 표현한다.
	JAVA에서는 거짓을 false로, 참을 true로 표현한다.

	-논리형	boolean 1byte짜리 true,flase

	정보의 최소단위는 1바이트이기 때문에 논리는 1바이트로 표헌한다 ???????????????
	
	예) boolean isTrue=false;	

	-관계 연산자
		==	:같다
		!=	:같지 않다
		>,<	:초과, 미만
		>=,<=	:이상, 이하

	-논리 연산자
		&& AND : A && B, A와 B 조건식 모두 참일 때 참 (로그인할때)
		|| OR  : A || B, 둘 중 하나라도 참이면 참

	-단항 연산자
		! NOT : 참을 거짓으로, 거짓을 참으로 변경


+++++


삼항 연산자(? :)
	조건식 ? 참: 거짓

	조건식이 참이면 통재로가 참에 있는 값이고, 거짓이면 통채로가
	거짓에 있는 값이다.


+++++


[실습]
문제(변수에 저장)를 출제한 후 사용자에게 정답을 입력받는다.
단, 객관식으로 출제하고 대화상자(Dialog)를 사용한다.
정답일때 "정답" 출력
오답일때 "오답" 출력
잘못입력했을 때 "?" 출력
(삼항 연산자 이용)

	
+++++

산술 연산자
1+3+"1":"41"
"1"+3+1="131"
	

















