입력 메소드
	- 문자열 입력
		next()
			공백 혹은 엔터(\n)를 구분점으로 삼고
			양 옆의 문자열 값을 분리하여 입력받는다.

			예)한 동석
			첫번째 sc.next() : 한
			두번째 sc.next() : 동석

		nextLine()
			공백이나 엔터를 구분점으로 삼지 않고 모두 가져온다.
			만약 사용하는 부분 위에서 엔터를 쳤다면,
			그 엔터를 가져오기 때문에 정상적으로 입력이 되지 않는다.
			이럴 때에는 한 번 더 사용해준다.

	- 정수 입력
		nextInt()

	- 실수 입력
		nextDouble()
----------------------------------------------------------------------------------
연산자
	기능이 있는 특수문자
	
연산자 우선순위
	최우선 연산자
	단항 연산자
	산술 연산자
	쉬프트 연산자
	관계 연산자
	논리 연산자
	삼항 연산자
	대입 연산자

결합성
	하나의 수식에 동일한 우선순위의 연산자가 여러 개 있을 경우
	알맞는 방향으로 결합되어 연산되는 성질.

비트연산(디자인, 정보보안, 네트워크, 안드로이드, 빅데이터, 직력화, 역직렬화,...)
	논리 연산자
	& AND(논리곱) : 둘 다 1일 때 1
	| OR(논리합) : 둘 중 하나라도 1이면 1
	^ XOR(배타논리합) : 두 비트가 서로 다르면 1

	1010	10(2)
	1011	11(2)

	10 & 11 : 1010 10(2)
	10 | 11 : 1011 11(2)
	10 ^ 11 : 0001 1(2)

	단항 연산자
	~ NOT(논리부정) : 0을 1로, 1을 0으로 변경

	~a = -a -1;

	쉬프트 연산자
		<<(좌쉬프트) : a << b, a를 b만큼 좌로 이동
		>>(우쉬프트) : a >> b, a를 b만큼 우로 이동
---------------------------------------------------------------------
조건식
	결과가 참 또는 거짓 둘 중 하나가 나오는 식.

	C언어에서는 거짓을 0으로, 참을 0이 아닌 수로 표현한다.
	JAVA에서는 거짓을 false로, 참을 true로 표현한다.

	논리형	boolean	1byte	true, false

	boolean isTrue = false;

	관계 연산자
		==	: 같다
		!=	: 같지 않다
		>, <	: 초과, 미만
		>=, <=	: 이상, 이하
	논리 연산자
		&& AND : A && B, A와 B조건식 모두 참일 때 참
		|| OR : A || B, 둘 중 하나라도 참이면 참

	단항 연산자
		! NOT : 참을 거짓으로, 거짓을 참으로 변경
-----------------------------------------------------------------------
삼항 연산자( ? : )
	조건식 ? 참 : 거짓

	조건식이 참이면 통채로가 참에 있는 값이고, 거짓이면 통채로가
	거짓에 있는 값이다.

[실습]
문제를 출제한 후 사용자에게 정답을 입력받는다.
단, 객관식으로 출제하고 대화상자(Dialog)를 사용한다.

정답일 때 "정답" 출력
오답일 때 "오답" 출력
잘못 입력했을 때 "?" 출력

※삼항 연산자를 사용한다.

제어문(조건문, 반복문)
미니프로젝트(쇼핑몰, 영화관, 카페, 노래방, 음식점 - 한동석 강사)
배열
메소드
클래스









































