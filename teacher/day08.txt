메소드
	이름 뒤에 소괄호()
	키워드 뒤에 소괄호는 메소드가 아니다.

	함수
	f(x)=2x+1
	f(3)=7
	f(3)+10

	f : 메소드 이름
	x : 매개변수
	2x+1 : 리턴값

메소드 선언

	①리턴타입 ②메소드명(③자료형 매개변수1,...){
		④실행할 문장
		⑤return 리턴값;
	}

	① 리턴값의 타입을 결정하는 부분, 리턴값이 없으면 void
	② 동사형으로 작성한다.
	③ 외부에서 전달할 값이 없다면 생략이 가능하다.
	외부에서 전달해주어야 하는 값의 갯수만큼 선언해 주어야
	한다. 사용시에는 매개변수의 타입과 갯수에 맞게 순서대로
	값을 전달해 주어야 한다. ( , 로 구분 )
	④ 생략이 가능하다.
	⑤ 사용하는 부분으로 돌려줄 값이 없다면 생략이 가능하다.
	리턴 뒤에 값이 있다면, 메소드를 사용하는 부분 통채로가
	그 리턴값으로 치환된다.

메소드 선언 순서
	문제) 두 정수의 곱셈

	1) 메소드명을 생각한다.
		void mul(){ }

	2) 매개변수를 생각한다.
		void mul(int num1,int num2){ }

	3) 실행할 문장을 생각한다.
		void mul(int num1,int num2){
			int result=num1*num2;
			System.out.println("두 정수의 곱셈!");
		}

	4) 리턴의 여부를 생각한다.
		void mul(int num1,int num2){
			int result=num1*num2;
			System.out.println("두 정수의 곱셈!");
			return result;
		}

	5) 리턴타입을 결정한다.

		int mul(int num1,int num2){
			int result=num1*num2;
			System.out.println("두 정수의 곱셈!");
			return result;
		}

메소드 사용
	메소드명(값,값,...); >>>> 매개변수 타입과 갯수에 맞게 넘겨주기

메소드 주의사항
	클래스 영역 밖에서 선언, 사용 불가
	메소드 영역 안에서 선언 불가
	메소드 영역 밖에서 사용 불가

	메소드를 선언할 때에는 반드시 메소드 밖에서 선언하고, 사용은 반드시
	안에서 사용해야 한다.

리턴을 사용해야 할 때
	사용하는 부분에서 그 결과값으로 처리해야할 행위가 남았을 때
	메소드의 처리 결과를 사용하는 부분에 알려주어야 할 때

리턴을 사용하지 않아도 될때
	메소드에서 모든 기능이 구현될 때

메소드의 사용 목적
	1. 반복되는 코드, 반복되는 기능을 쉽게 관리하기 위하여
		재사용의 목적이 있기 때문에 특정성이 부여되면 안된다.

	2. 소스코드 간결화
	






